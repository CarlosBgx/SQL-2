-- Exploración de datos de COVID-19

/* Consulta inicial: Datos generales */

SELECT *
FROM ProyectoPersonal.dbo.CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3, 4; 
/* Se ordena por confirmed_cases y reported_deaths para revisar tendencias.*/

/* Selección de columnas clave */

SELECT Location, date, confirmed_cases, case_updates, reported_deaths, population_count
FROM ProyectoPersonal.dbo.CovidDeaths
WHERE continent IS NOT NULL
ORDER BY date;
/* Se ordena por fecha para análisis cronológico de los datos.*/

/* Total de casos frente a total de muertes 
Probabilidad de fallecer si contraes COVID en Chile. */

SELECT Location, date, confirmed_cases, reported_deaths, 
       (reported_deaths / confirmed_cases) * 100 AS MortalityRate
FROM ProyectoPersonal.dbo.CovidDeaths
WHERE Location = 'Chile'; 
/* Se utiliza el cálculo de MortalityRate para mostrar el porcentaje de muertes en relación a los casos confirmados.*/

/*Revisaremos la tasa de mortalidad avanzando cada 50 filas de fecha*/
WITH CTE_ejemplo AS (
  SELECT 
    location, date, confirmed_cases, reported_deaths, 
    ROUND((reported_deaths / confirmed_cases) * 100, 2) AS MortalityRate,
    ROW_NUMBER() OVER (ORDER BY date) AS every50rows -- genera un número incremental por fila basado en la columna date
  FROM ProyectoPersonal.dbo.CovidDeaths
  WHERE location = 'Chile'
) -- Se crea una tabla temporal con el alias CTE_ejemplo

SELECT 
    location, date, confirmed_cases, reported_deaths, MortalityRate
FROM CTE_ejemplo
WHERE every50rows % 50 = 1 -- Selecciona cada 50 filas usando el número incremental creado anteriormente
ORDER BY date;


/* Países con mayor tasa de infección respecto a la población */
SELECT Location, population_count, MAX(confirmed_cases) AS highest_cases, 
       MAX((confirmed_cases / population_count) * 100) AS infected_rate
FROM ProyectoPersonal.dbo.CovidDeaths
GROUP BY Location, population_count
ORDER BY infected_rate DESC; -- Ordena por porcentaje de población infectada en orden descendente.
/* MAX((confirmed_cases / population_count) * 100): Encuentra la tasa máxima de infección para cada país.*/

/* Países con mayor número de muertes totales */
SELECT Location, MAX(CAST(reported_deaths AS INT)) AS total_fatalities
FROM ProyectoPersonal.dbo.CovidDeaths
WHERE continent IS NOT NULL
GROUP BY Location
ORDER BY total_fatalities DESC; -- Ordena por número total de muertes en orden descendente.
/* MAX(CAST(reported_deaths AS INT)): Asegura el cálculo correcto de las muertes totales por país.*/

/* Muertes por continente 
Muestra los continentes con el mayor número de muertes totales.*/
SELECT continent, MAX(CAST(reported_deaths AS INT)) AS total_fatalities
FROM ProyectoPersonal.dbo.CovidDeaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY total_fatalities DESC; -- Ordena por número total de muertes en orden descendente.
/* MAX(CAST(reported_deaths AS INT)): Calcula el valor máximo de muertes para cada continente.*/

/* Totales globales 
 el total de casos, muertes y porcentaje de muertes a nivel global.*/
SELECT SUM(case_updates) AS confirmed_cases, 
       SUM(CAST(death_updates AS INT)) AS reported_deaths,  -- Suma los fallecimientos reportados convirtiéndolas a valores enteros.
       (SUM(CAST(death_updates AS INT)) / SUM(case_updates)) * 100 AS MortalityRate -- Calcula el porcentaje global de fallecimientos frente a casos nuevos, una tasa de mortalidad
FROM ProyectoPersonal.dbo.CovidDeaths
WHERE continent IS NOT NULL;

/* Población total y vacunaciones 
-- Muestra el porcentaje de población que recibió al menos una vacuna en Chile.*/
SELECT dea.continent, dea.location, dea.date, dea.population_count, vac.new_vaccinations,
       SUM(CONVERT(INT, vac.new_vaccinations)) OVER (PARTITION BY dea.Location ORDER BY dea.Date) AS vaccinated_total
-- Calcula la suma acumulativa de vacunaciones por fecha.
FROM ProyectoPersonal.dbo.CovidDeaths dea
JOIN ProyectoPersonal.dbo.CovidVaccinations vac
  ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent IS NOT NULL AND dea.location = 'Chile'; 


/* Esta CTE se calcula la suma acumulativa de vacunaciones de cada país*/
WITH PopvsVac (Continent, Location, Date, Population_Count, New_Vaccinations, Vaccinated_Total)
AS (
  SELECT dea.continent, dea.location, dea.date, dea.population_count, vac.new_vaccinations,
         SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.Location ORDER BY dea.Date) AS vaccinated_total
  FROM ProyectoPersonal.dbo.CovidDeaths dea
  JOIN ProyectoPersonal.dbo.CovidVaccinations vac
    ON dea.location = vac.location AND dea.date = vac.date
  WHERE dea.continent IS NOT NULL
)
SELECT *, (vaccinated_total / population_count) * 100 AS vaccination_rate
FROM PopvsVac; -- Calcula el porcentaje de población vacunada usando datos acumulados.


/* Uso de tabla temporal para calcular el rate de vacunaciones acumuladas */
DROP TABLE IF EXISTS #PopulationVaccinationRate;

CREATE TABLE #PopulationVaccinationRate (
  Continent NVARCHAR(255),
  Location NVARCHAR(255),
  Date DATETIME,
  Population_Count NUMERIC,
  New_vaccinations NUMERIC,
  Vaccinated_Total NUMERIC
);

INSERT INTO #PopulationVaccinationRate
SELECT dea.continent, dea.location, dea.date, dea.population_count, vac.new_vaccinations,
       SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.Location ORDER BY dea.Date) AS vaccinated_total
FROM ProyectoPersonal.dbo.CovidDeaths dea
JOIN ProyectoPersonal.dbo.CovidVaccinations vac
  ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent IS NOT NULL;

SELECT *, (vaccinated_total / population_count) * 100 AS vaccination_rate
FROM #PopulationVaccinationRate; -- Calcula el porcentaje de vacunación acumulado por país y fecha.
